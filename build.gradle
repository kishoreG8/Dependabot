buildscript {

    ext {
        target_sdk_version = 34
        compile_sdk_version = 35
        min_sdk_version = 26

        kotlin_version = '2.1.10'
        maine_toolbar_version = '2.3.8'
        launchercommunication_lib_version = '7.1.0'
        coroutines_version = '1.10.1'
        compose_bom_version = '2025.03.00'
        compose_kotlin_compiler_version = '1.5.11'
        constraint_layout_compose_version = '1.1.1'
        koin_version = '4.0.2'
        navigation_component_version = '2.8.9'
        fragment_version = '1.8.6'
        activity_version = '1.10.1'
        constraint_layout_version = '2.2.1'
        core_ktx_version = '1.15.0'
        appcompat_version = '1.7.0'
        legacy_support_v4_version = '1.0.0'
        material_version = '1.12.0'
        lifecycle_version_extension = '2.2.0'
        lifecycle_version = '2.8.7'
        retrofit_version = '2.11.0'
        firbase_bom_version = '33.10.0'
        core_testing_version = '2.2.0'
        junit_jupiter_version = '5.12.1'
        mockk_version = '1.13.17'
        ui_test_junit_assertion_version = '1.2.1'
        ui_test_rules = '1.6.1'
        espresso_version = '3.6.1'
        leak_canary_version = '2.13'
        room_version = '2.6.1'
        log_aggregator = '7.5.0'
        backbone_api_version = '7.9.2'
        certificates_api_lib = '7.5.0'
        work_manager_runtime = '2.10.0'
        ui_automator_version = '2.4.0-alpha01'
        ok_http_version="5.0.0-alpha.14"
        tracing_version = "1.2.0"
        play_app_update_version = "2.1.0"
        robolectricVersion = "4.14.1"
        gson_version = '2.12.1'
        material3_version = '1.4.0-alpha10'
        datastore_version = '1.1.3'
        baseline_profileinstaller_version = '1.4.1'
        truth_version = '1.4.4'
        hamcrest_test_lib_version = '3.0'
        custom_toast_lib_version = '1.1.0'
        gms_barcode_scanner_version = '16.1.0'
        gms_play_services_base_version = '18.6.0'
        flexbox_version = '3.0.0'
        zxing_barcode_scanner_version = '4.3.0'
        exifinterface_version = '1.4.0'
        xml_parser_version = '2.7.1'
        lifecycle_service_version = '2.7.0'
        lifecycle_ktx_version = '2.8.7'
        maps_utils_version = '3.11.2'
        activity_version = '1.9.0'

        getBranchName = { ->
            try {
                def branch = System.getenv("branch")

                return branch.toString().trim()
            }
            catch (ignored) {
                return ""
            }
        }
    }


    repositories {
        google()
        mavenCentral()
        maven {
            url "https://artifactory.trimble.tools/artifactory/ttm-mobile-ecosystem-maven"
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.9.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.4.2'
        classpath 'com.trimble:infrastructure-gradle-plugins-plugin:6.2.0'
        classpath 'com.google.firebase:perf-plugin:1.4.2'  // Performance Monitoring plugin
        classpath 'com.google.firebase:firebase-crashlytics-gradle:3.0.3'
        classpath 'com.github.triplet.gradle:play-publisher:3.12.1'
    }
}

plugins {
    id "org.sonarqube" version "6.0.1.5171"
    id 'org.jetbrains.kotlin.android' version "$kotlin_version" apply false
    id 'androidx.baselineprofile' version '1.3.3' apply false
}

sonarqube {
    properties {
        property "sonar.host.url", "https://sonar.trimble.tools"
        property "sonar.login", System.getenv("PNET_SONAR_TOKEN")
        property "sonar.branch.name", hasProperty("branch") ? branch : System.getenv("GIT_BRANCH_NAME") ?: "master"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

project(":app") {
    sonarqube {
        properties {
            property "sonar.junit.reportPaths", "build/test-results/testStgDebugUnitTest"
        }
    }
}

project(":formLibrary") {
    sonarqube {
        properties {
            property "sonar.junit.reportPaths", "build/test-results/testDebugUnitTest"
        }
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
    apply plugin: "com.jfrog.artifactory"

    // Forced library version to mitigate vulnerability of 3rd party libs.
    configurations.configureEach {
        resolutionStrategy.force "com.google.android.gms:play-services-basement:18.6.0"
        resolutionStrategy.force "com.squareup.okio:okio-jvm:3.10.2"
        resolutionStrategy.force "com.google.guava:guava:33.4.0-android"
        resolutionStrategy.force "com.google.guava:guava:33.4.0-android"
        resolutionStrategy.force "commons-io:commons-io:2.18.0"
        resolutionStrategy.force "com.google.code.gson:gson:2.12.1"
        resolutionStrategy.force "com.google.code.gson:gson:2.12.1"
    }

}

tasks.register('clean', Delete) {
    delete rootProject.layout.buildDirectory
}
